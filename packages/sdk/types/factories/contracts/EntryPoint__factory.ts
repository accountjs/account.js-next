/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../contracts/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000050565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b506200005e565b6102138062003c8d83390190565b608051613c0c62000081600039600081816111100152612ac80152613c0c6000f3fe6080604052600436106101025760003560e01c8063957122ab11610095578063bb9fe6bf11610064578063bb9fe6bf146103a1578063c23a5cea146103b6578063d6383f94146103d6578063ee219423146103f6578063fc7e286d1461041657600080fd5b8063957122ab1461032e5780639b249f691461034e578063a61935311461036e578063b760faf91461038e57600080fd5b80634b1d7cf5116100d15780634b1d7cf51461019d5780635287ce12146101bd57806370a08231146102da5780638f41ec5a1461031957600080fd5b80630396cb60146101175780631d7327561461012a5780631fad948c1461015d578063205c28781461017d57600080fd5b3661011257610110336104cb565b005b600080fd5b610110610125366004612d88565b610532565b34801561013657600080fd5b5061014a610145366004612f98565b6107c1565b6040519081526020015b60405180910390f35b34801561016957600080fd5b506101106101783660046130a1565b610934565b34801561018957600080fd5b506101106101983660046130f7565b610a74565b3480156101a957600080fd5b506101106101b83660046130a1565b610bf0565b3480156101c957600080fd5b506102826101d8366004613123565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b038082168352600160701b820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff81166060830152640100000000900465ffffffffffff16608082015290565b6040805182516001600160701b03908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015165ffffffffffff169181019190915260a001610154565b3480156102e657600080fd5b5061014a6102f5366004613123565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b34801561032557600080fd5b5061014a600181565b34801561033a57600080fd5b50610110610349366004613140565b610ffc565b34801561035a57600080fd5b506101106103693660046131c4565b6110f9565b34801561037a57600080fd5b5061014a61038936600461321e565b6111af565b61011061039c366004613123565b6104cb565b3480156103ad57600080fd5b506101106111f1565b3480156103c257600080fd5b506101106103d1366004613123565b61131a565b3480156103e257600080fd5b506101106103f1366004613252565b611552565b34801561040257600080fd5b5061011061041136600461321e565b61164d565b34801561042257600080fd5b50610485610431366004613123565b600060208190529081526040902080546001909101546001600160701b0380831692600160701b810460ff1692600160781b9091049091169063ffffffff811690640100000000900465ffffffffffff1685565b604080516001600160701b0396871681529415156020860152929094169183019190915263ffffffff16606082015265ffffffffffff909116608082015260a001610154565b6104d58134611829565b6001600160a01b03811660008181526020818152604091829020805492516001600160701b03909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166105995760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff90811690831610156105f75760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606401610590565b8054600090610617903490600160781b90046001600160701b03166132c9565b90506000811161065e5760405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606401610590565b6001600160701b038111156106a65760405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606401610590565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b02600160781b600160e81b0319951515600160701b026effffffffffffffffffffffffffffff199097169190991617949094179290921695909517865551949092018054925165ffffffffffff166401000000000269ffffffffffffffffffff19909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01906107b4908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b6000805a90503330146108165760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606401610590565b8451604081015160608201518101611388015a10156108405763deaddead60e01b60005260206000fd5b8751600090156108d457600061085d846000015160008c866118c5565b9050806108d25760006108716108006118dd565b8051909150156108cc5784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018760200151846040516108c3929190613339565b60405180910390a35b60019250505b505b600088608001515a86030190506109266000838b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611909915050565b9a9950505050505050505050565b816000816001600160401b0381111561094f5761094f612dae565b60405190808252806020026020018201604052801561098857816020015b610975612cfe565b81526020019060019003908161096d5790505b50905060005b82811015610a015760008282815181106109aa576109aa613352565b602002602001015190506000806109e5848a8a878181106109cd576109cd613352565b90506020028101906109df9190613368565b85611c00565b915091506109f68483836000611d82565b50505060010161098e565b506000805b83811015610a6157610a5581888884818110610a2457610a24613352565b9050602002810190610a369190613368565b858481518110610a4857610a48613352565b6020026020010151611f1e565b90910190600101610a06565b50610a6c8482612045565b505050505050565b33600090815260208190526040902080546001600160701b0316821115610add5760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606401610590565b8054610af39083906001600160701b0316613389565b81546001600160701b0319166001600160701b0391909116178155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610b9f576040519150601f19603f3d011682016040523d82523d6000602084013e610ba4565b606091505b5050905080610bea5760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606401610590565b50505050565b816000805b82811015610d645736868683818110610c1057610c10613352565b9050602002810190610c2291906133a0565b9050366000610c3183806133b6565b90925090506000610c486040850160208601613123565b90506000196001600160a01b03821601610ca45760405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606401610590565b6001600160a01b03811615610d41576001600160a01b03811663e3563a4f8484610cd160408901896133ff565b6040518563ffffffff1660e01b8152600401610cf094939291906135aa565b60006040518083038186803b158015610d0857600080fd5b505afa925050508015610d19575060015b610d415760405163086a9f7560e41b81526001600160a01b0382166004820152602401610590565b610d4b82876132c9565b9550505050508080610d5c90613627565b915050610bf5565b506000816001600160401b03811115610d7f57610d7f612dae565b604051908082528060200260200182016040528015610db857816020015b610da5612cfe565b815260200190600190039081610d9d5790505b5090506000805b84811015610ea35736888883818110610dda57610dda613352565b9050602002810190610dec91906133a0565b9050366000610dfb83806133b6565b90925090506000610e126040850160208601613123565b90508160005b81811015610e8a576000898981518110610e3457610e34613352565b60200260200101519050600080610e578b8989878181106109cd576109cd613352565b91509150610e6784838389611d82565b8a610e7181613627565b9b50505050508080610e8290613627565b915050610e18565b5050505050508080610e9b90613627565b915050610dbf565b50600080915060005b85811015610fbc5736898983818110610ec757610ec7613352565b9050602002810190610ed991906133a0565b9050610eeb6040820160208301613123565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a2366000610f2d83806133b6565b90925090508060005b81811015610fa457610f7888858584818110610f5457610f54613352565b9050602002810190610f669190613368565b8b8b81518110610a4857610a48613352565b610f8290886132c9565b965087610f8e81613627565b9850508080610f9c90613627565b915050610f36565b50505050508080610fb490613627565b915050610eac565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a2610ff28682612045565b5050505050505050565b8315801561101257506001600160a01b0383163b155b1561105f5760405162461bcd60e51b815260206004820152601960248201527f41413230206163636f756e74206e6f74206465706c6f796564000000000000006044820152606401610590565b601481106110d75760006110766014828486613640565b61107f9161366a565b60601c9050803b6000036110d55760405162461bcd60e51b815260206004820152601b60248201527f41413330207061796d6173746572206e6f74206465706c6f79656400000000006044820152606401610590565b505b60405162461bcd60e51b81526020600482015260006024820152604401610590565b604051632b870d1b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a3690611147908590859060040161369f565b6020604051808303816000875af1158015611166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118a91906136b3565b604051633653dc0360e11b81526001600160a01b039091166004820152602401610590565b60006111ba82612143565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff909116900361124a5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606401610590565b8054600160701b900460ff166112965760405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606401610590565b60018101546000906112ae9063ffffffff16426136d0565b60018301805469ffffffffffff00000000191664010000000065ffffffffffff841690810291909117909155835460ff60701b1916845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602001610526565b3360009081526020819052604090208054600160781b90046001600160701b03168061137f5760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606401610590565b6001820154640100000000900465ffffffffffff166113e05760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606401610590565b60018201544264010000000090910465ffffffffffff1611156114455760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606401610590565b60018201805469ffffffffffffffffffff191690558154600160781b600160e81b0319168255604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d80600081146114fc576040519150601f19603f3d011682016040523d82523d6000602084013e611501565b606091505b5050905080610bea5760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610590565b61155a612cfe565b6115638561215c565b60008061157260008885611c00565b9150915060006115828383612236565b905061158d43600052565b600061159b60008a87611f1e565b90506115a643600052565b600060606001600160a01b038a161561161c57896001600160a01b031689896040516115d39291906136fa565b6000604051808303816000865af19150503d8060008114611610576040519150601f19603f3d011682016040523d82523d6000602084013e611615565b606091505b5090925090505b866080015183856020015186604001518585604051630116f59360e71b81526004016105909695949392919061370a565b611655612cfe565b61165e8261215c565b60008061166d60008585611c00565b915091506000611684846000015160a00151612302565b84515190915060009061169690612302565b90506116b5604051806040016040528060008152602001600081525090565b3660006116c560408a018a6133ff565b9092509050600060148210156116dc5760006116f7565b6116ea601460008486613640565b6116f39161366a565b60601c5b905061170281612302565b935050505060006117138686612236565b9050600081600001519050600060016001600160a01b0316826001600160a01b031614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff1681526020016117908c6060015190565b905290506001600160a01b038316158015906117b657506001600160a01b038316600114155b156118085760006040518060400160405280856001600160a01b031681526020016117e086612302565b81525090508187878a84604051633ebb2d3960e21b81526004016105909594939291906137ac565b8086868960405163e0cff05f60e01b8152600401610590949392919061382c565b6001600160a01b0382166000908152602081905260408120805490919061185a9084906001600160701b03166132c9565b90506001600160701b038111156118a65760405162461bcd60e51b815260206004820152601060248201526f6465706f736974206f766572666c6f7760801b6044820152606401610590565b81546001600160701b0319166001600160701b03919091161790555050565b6000806000845160208601878987f195945050505050565b60603d828111156118eb5750815b604051602082018101604052818152816000602083013e9392505050565b6000805a85519091506000908161191f82612351565b60a08301519091506001600160a01b03811661193e5782519350611ae5565b809350600088511115611ae557868202955060028a600281111561196457611964613883565b146119d657606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a234099161199e908e908d908c90600401613899565b600060405180830381600088803b1580156119b857600080fd5b5087f11580156119cc573d6000803e3d6000fd5b5050505050611ae5565b606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611a0b908e908d908c90600401613899565b600060405180830381600088803b158015611a2557600080fd5b5087f193505050508015611a37575060015b611ae557611a436138e0565b806308c379a003611a9c5750611a576138fc565b80611a625750611a9e565b8b81604051602001611a749190613985565b60408051601f1981840301815290829052631101335b60e11b82526105909291600401613339565b505b8a604051631101335b60e11b81526004016105909181526040602082018190526012908201527110504d4c081c1bdcdd13dc081c995d995c9d60721b606082015260800190565b5a85038701965081870295508589604001511015611b4e578a604051631101335b60e11b815260040161059091815260406020808301829052908201527f414135312070726566756e642062656c6f772061637475616c476173436f7374606082015260800190565b6040890151869003611b608582611829565b6000808c6002811115611b7557611b75613883565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f604051611be8949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b60008060005a8451909150611c158682612381565b611c1e866111af565b6020860152604081015160608201516080830151171760e087013517610100870135176effffffffffffffffffffffffffffff811115611ca05760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606401610590565b600080611cac8461247a565b9050611cba8a8a8a846124c7565b97509150611cc743600052565b60a08401516060906001600160a01b031615611cef57611cea8b8b8b85876126ff565b975090505b60005a87039050808b60a001351015611d54578b604051631101335b60e11b8152600401610590918152604060208201819052601e908201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b600080611d8e85612922565b91509150816001600160a01b0316836001600160a01b031614611df45785604051631101335b60e11b81526004016105909181526040602082018190526014908201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b8015611e4c5785604051631101335b60e11b81526004016105909181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b6000611e5785612922565b925090506001600160a01b03811615611eb35786604051631101335b60e11b81526004016105909181526040602082018190526014908201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b8115611f155786604051631101335b60e11b81526004016105909181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f742064756060820152606560f81b608082015260a00190565b50505050505050565b6000805a90506000611f31846060015190565b905030631d732756611f4660608801886133ff565b87856040518563ffffffff1660e01b8152600401611f6794939291906139c3565b6020604051808303816000875af1925050508015611fa2575060408051601f3d908101601f19168201909252611f9f91810190613a76565b60015b61203957600060206000803e50600051632152215360e01b81016120045786604051631101335b60e11b8152600401610590918152604060208201819052600f908201526e41413935206f7574206f662067617360881b606082015260800190565b600085608001515a6120169086613389565b61202091906132c9565b9050612030886002888685611909565b9450505061203c565b92505b50509392505050565b6001600160a01b03821661209b5760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606401610590565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146120e8576040519150601f19603f3d011682016040523d82523d6000602084013e6120ed565b606091505b505090508061213e5760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606401610590565b505050565b600061214e82612975565b805190602001209050919050565b3063957122ab61216f60408401846133ff565b61217c6020860186613123565b61218a6101208701876133ff565b6040518663ffffffff1660e01b81526004016121aa959493929190613a8f565b60006040518083038186803b1580156121c257600080fd5b505afa9250505080156121d3575060015b612233576121df6138e0565b806308c379a00361222757506121f36138fc565b806121fe5750612229565b80511561222357600081604051631101335b60e11b8152600401610590929190613339565b5050565b505b3d6000803e3d6000fd5b50565b604080516060810182526000808252602082018190529181018290529061225c846129b4565b90506000612269846129b4565b82519091506001600160a01b038116612280575080515b602080840151604080860151928501519085015191929165ffffffffffff80831690851610156122ae578193505b8065ffffffffffff168365ffffffffffff1611156122ca578092505b5050604080516060810182526001600160a01b03909416845265ffffffffffff92831660208501529116908201529250505092915050565b604080518082018252600080825260208083018281526001600160a01b03959095168252819052919091208054600160781b90046001600160701b031682526001015463ffffffff1690915290565b60c081015160e08201516000919080820361236d575092915050565b61237982488301612a25565b949350505050565b61238e6020830183613123565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e08084013591830191909152610100830135908201523660006123ed6101208501856133ff565b9092509050801561246d5760148110156124495760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606401610590565b612457601460008385613640565b6124609161366a565b60601c60a0840152610bea565b600060a084015250505050565b60a081015160009081906001600160a01b031661249857600161249b565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a85518051919250906124ec89886124e760408c018c6133ff565b612a3d565b60a08201516124fa43600052565b60006001600160a01b038216612542576001600160a01b0383166000908152602081905260409020546001600160701b031688811161253b5780890361253e565b60005b9150505b606084015160208a0151604051633a871cdd60e01b81526001600160a01b03861692633a871cdd92909161257c918f918790600401613ac5565b60206040518083038160008887f1935050505080156125b8575060408051601f3d908101601f191682019092526125b591810190613a76565b60015b612642576125c46138e0565b806308c379a0036125f557506125d86138fc565b806125e357506125f7565b8b81604051602001611a749190613aea565b505b8a604051631101335b60e11b8152600401610590918152604060208201819052601690820152754141323320726576657274656420286f72204f4f472960501b606082015260800190565b95506001600160a01b0382166126ec576001600160a01b038316600090815260208190526040902080546001600160701b0316808a11156126cf578c604051631101335b60e11b81526004016105909181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b81546001600160701b031916908a90036001600160701b03161790555b5a85039650505050505094509492505050565b8251606081810151909160009184811161275b5760405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606401610590565b60a08201516001600160a01b038116600090815260208190526040902080548784039291906001600160701b0316898110156127e3578c604051631101335b60e11b8152600401610590918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8981038260000160006101000a8154816001600160701b0302191690836001600160701b03160217905550826001600160a01b031663f465c77e858e8e602001518e6040518563ffffffff1660e01b815260040161284393929190613ac5565b60006040518083038160008887f19350505050801561288457506040513d6000823e601f3d908101601f191682016040526128819190810190613b21565b60015b61290e576128906138e0565b806308c379a0036128c157506128a46138fc565b806128af57506128c3565b8d81604051602001611a749190613bac565b505b8c604051631101335b60e11b8152600401610590918152604060208201819052601690820152754141333320726576657274656420286f72204f4f472960501b606082015260800190565b909e909d509b505050505050505050505050565b6000808260000361293857506000928392509050565b6000612943846129b4565b9050806040015165ffffffffffff1642118061296a5750806020015165ffffffffffff1642105b905194909350915050565b60603660006129886101408501856133ff565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff81166000036129f0575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000818310612a345781612a36565b825b9392505050565b8015610bea578251516001600160a01b0381163b15612aa85784604051631101335b60e11b8152600401610590918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b835160600151604051632b870d1b60e11b81526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163570e1a369190612b00908890889060040161369f565b60206040518083038160008887f1158015612b1f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612b4491906136b3565b90506001600160a01b038116612ba65785604051631101335b60e11b8152600401610590918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b816001600160a01b0316816001600160a01b031614612c105785604051631101335b60e11b815260040161059091815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b806001600160a01b03163b600003612c735785604051631101335b60e11b815260040161059091815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000612c826014828688613640565b612c8b9161366a565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051612ced9291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b6040518060a00160405280612d6360405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b600060208284031215612d9a57600080fd5b813563ffffffff81168114612a3657600080fd5b634e487b7160e01b600052604160045260246000fd5b60a081018181106001600160401b0382111715612de357612de3612dae565b60405250565b61010081018181106001600160401b0382111715612de357612de3612dae565b601f8201601f191681016001600160401b0381118282101715612e2e57612e2e612dae565b6040525050565b60006001600160401b03821115612e4e57612e4e612dae565b50601f01601f191660200190565b6001600160a01b038116811461223357600080fd5b8035612e7c81612e5c565b919050565b6000818303610180811215612e9557600080fd5b604051612ea181612dc4565b80925061010080831215612eb457600080fd5b6040519250612ec283612de9565b612ecb85612e71565b835260208501356020840152604085013560408401526060850135606084015260808501356080840152612f0160a08601612e71565b60a084015260c085013560c084015260e085013560e084015282825280850135602083015250610120840135604082015261014084013560608201526101608401356080820152505092915050565b60008083601f840112612f6257600080fd5b5081356001600160401b03811115612f7957600080fd5b602083019150836020828501011115612f9157600080fd5b9250929050565b6000806000806101c08587031215612faf57600080fd5b84356001600160401b0380821115612fc657600080fd5b818701915087601f830112612fda57600080fd5b8135612fe581612e35565b604051612ff28282612e09565b8281528a602084870101111561300757600080fd5b8260208601602083013760006020848301015280985050505061302d8860208901612e81565b94506101a087013591508082111561304457600080fd5b5061305187828801612f50565b95989497509550505050565b60008083601f84011261306f57600080fd5b5081356001600160401b0381111561308657600080fd5b6020830191508360208260051b8501011115612f9157600080fd5b6000806000604084860312156130b657600080fd5b83356001600160401b038111156130cc57600080fd5b6130d88682870161305d565b90945092505060208401356130ec81612e5c565b809150509250925092565b6000806040838503121561310a57600080fd5b823561311581612e5c565b946020939093013593505050565b60006020828403121561313557600080fd5b8135612a3681612e5c565b60008060008060006060868803121561315857600080fd5b85356001600160401b038082111561316f57600080fd5b61317b89838a01612f50565b90975095506020880135915061319082612e5c565b909350604087013590808211156131a657600080fd5b506131b388828901612f50565b969995985093965092949392505050565b600080602083850312156131d757600080fd5b82356001600160401b038111156131ed57600080fd5b6131f985828601612f50565b90969095509350505050565b6000610160828403121561321857600080fd5b50919050565b60006020828403121561323057600080fd5b81356001600160401b0381111561324657600080fd5b61237984828501613205565b6000806000806060858703121561326857600080fd5b84356001600160401b038082111561327f57600080fd5b61328b88838901613205565b95506020870135915061329d82612e5c565b9093506040860135908082111561304457600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156132dc576132dc6132b3565b500190565b60005b838110156132fc5781810151838201526020016132e4565b83811115610bea5750506000910152565b600081518084526133258160208601602086016132e1565b601f01601f19169290920160200192915050565b828152604060208201526000612379604083018461330d565b634e487b7160e01b600052603260045260246000fd5b6000823561015e1983360301811261337f57600080fd5b9190910192915050565b60008282101561339b5761339b6132b3565b500390565b60008235605e1983360301811261337f57600080fd5b6000808335601e198436030181126133cd57600080fd5b8301803591506001600160401b038211156133e757600080fd5b6020019150600581901b3603821315612f9157600080fd5b6000808335601e1984360301811261341657600080fd5b8301803591506001600160401b0382111561343057600080fd5b602001915036819003821315612f9157600080fd5b6000808335601e1984360301811261345c57600080fd5b83016020810192503590506001600160401b0381111561347b57600080fd5b803603821315612f9157600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101606134d2846134c585612e71565b6001600160a01b03169052565b602083013560208501526134e96040840184613445565b8260408701526134fc838701828461348a565b9250505061350d6060840184613445565b858303606087015261352083828461348a565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e085015261010080840135818601525061012061356781850185613445565b8684038388015261357984828461348a565b935050505061014061358d81850185613445565b8684038388015261359f84828461348a565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b8981101561361057868503605f190184528235368c900361015e190181126135ee578283fd5b6135fa868d83016134b3565b95505060209384019392909201916001016135c8565b50505050828103602084015261359f81858761348a565b600060018201613639576136396132b3565b5060010190565b6000808585111561365057600080fd5b8386111561365d57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156136975780818660140360031b1b83161692505b505092915050565b60208152600061237960208301848661348a565b6000602082840312156136c557600080fd5b8151612a3681612e5c565b600065ffffffffffff8083168185168083038211156136f1576136f16132b3565b01949350505050565b8183823760009101908152919050565b868152856020820152600065ffffffffffff8087166040840152808616606084015250831515608083015260c060a083015261374960c083018461330d565b98975050505050505050565b80518252602081015160208301526040810151151560408301526000606082015165ffffffffffff8082166060860152806080850151166080860152505060a082015160c060a085015261237960c085018261330d565b60006101408083526137c081840189613755565b9150506137da602083018780518252602090810151910152565b845160608301526020948501516080830152835160a08301529284015160c082015281516001600160a01b031660e0820152908301518051610100830152909201516101209092019190915292915050565b60e08152600061383f60e0830187613755565b9050613858602083018680518252602090810151910152565b8351606083015260208401516080830152825160a0830152602083015160c083015295945050505050565b634e487b7160e01b600052602160045260246000fd5b6000600385106138b957634e487b7160e01b600052602160045260246000fd5b848252606060208301526138d0606083018561330d565b9050826040830152949350505050565b600060033d11156138f95760046000803e5060005160e01c5b90565b600060443d101561390a5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561393957505050505090565b82850191508151818111156139515750505050505090565b843d870101602082850101111561396b5750505050505090565b61397a60208286010187612e09565b509095945050505050565b75020a09a98103837b9ba27b8103932bb32b93a32b21d160551b8152600082516139b68160168501602087016132e1565b9190910160160192915050565b60006101c08083526139d8818401878961348a565b9050845160018060a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a084015261359f818561330d565b600060208284031215613a8857600080fd5b5051919050565b606081526000613aa360608301878961348a565b6001600160a01b0386166020840152828103604084015261374981858761348a565b606081526000613ad860608301866134b3565b60208301949094525060400152919050565b6e020a09919903932bb32b93a32b21d1608d1b815260008251613b1481600f8501602087016132e1565b91909101600f0192915050565b60008060408385031215613b3457600080fd5b82516001600160401b03811115613b4a57600080fd5b8301601f81018513613b5b57600080fd5b8051613b6681612e35565b604051613b738282612e09565b828152876020848601011115613b8857600080fd5b613b998360208301602087016132e1565b6020969096015195979596505050505050565b6e020a09999903932bb32b93a32b21d1608d1b815260008251613b1481600f8501602087016132e156fea2646970667358221220eb54f37354092da25e1e4315fa2bdb6f7d16aed66d2fd367f1be27792a04f44e64736f6c634300080f0033608060405234801561001057600080fd5b506101f3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100ec565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008061006f601482858761015e565b61007891610188565b60601c9050600061008c846014818861015e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100e357600093505b50505092915050565b600080602083850312156100ff57600080fd5b823567ffffffffffffffff8082111561011757600080fd5b818501915085601f83011261012b57600080fd5b81358181111561013a57600080fd5b86602082850101111561014c57600080fd5b60209290920196919550909350505050565b6000808585111561016e57600080fd5b8386111561017b57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101b55780818660140360031b1b83161692505b50509291505056fea2646970667358221220f9edea001dd81294878ab9c5e136207d10b15afba7c9512806b74582612c2cbc64736f6c634300080f0033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
